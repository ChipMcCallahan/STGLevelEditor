// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: stg_levelset.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace STG {

  /// <summary>Holder for reflection information generated from stg_levelset.proto</summary>
  public static partial class StgLevelsetReflection {

    #region Descriptor
    /// <summary>File descriptor for stg_levelset.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StgLevelsetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJzdGdfbGV2ZWxzZXQucHJvdG8SEnN0Z19sZXZlbHNldF9wcm90byJVCghM",
            "ZXZlbHNldBINCgV0aXRsZRgBIAEoCRIpCgZsZXZlbHMYAiADKAsyGS5zdGdf",
            "bGV2ZWxzZXRfcHJvdG8uTGV2ZWwSDwoHYXV0aG9ycxgDIAMoCSJZCgVMZXZl",
            "bBINCgV0aXRsZRgBIAEoCRIPCgdhdXRob3JzGAIgAygJEjAKCWdhbWVib2Fy",
            "ZBgEIAEoCzIdLnN0Z19sZXZlbHNldF9wcm90by5HYW1lYm9hcmQiyQMKCUdh",
            "bWVib2FyZBIOCgZzaXplX3gYASABKAUSDgoGc2l6ZV95GAIgASgFEg4KBnNp",
            "emVfehgDIAEoBRIMCgR0aWNrGAQgASgFEjAKCWdhbWVzdGF0ZRgFIAEoDjId",
            "LnN0Z19sZXZlbHNldF9wcm90by5HYW1lc3RhdGUSLwoHZ2xvYmFscxgGIAMo",
            "CzIeLnN0Z19sZXZlbHNldF9wcm90by5DaGFubmVsU2V0EjMKA21hcBgIIAMo",
            "CzImLnN0Z19sZXZlbHNldF9wcm90by5HYW1lYm9hcmQuTWFwRW50cnkSSAoO",
            "ZWxlbWVudF9zdGF0ZXMYCSADKAsyMC5zdGdfbGV2ZWxzZXRfcHJvdG8uR2Ft",
            "ZWJvYXJkLkVsZW1lbnRTdGF0ZXNFbnRyeRpECghNYXBFbnRyeRILCgNrZXkY",
            "ASABKAUSJwoFdmFsdWUYAiABKAsyGC5zdGdfbGV2ZWxzZXRfcHJvdG8uQ2Vs",
            "bDoCOAEaVgoSRWxlbWVudFN0YXRlc0VudHJ5EgsKA2tleRgBIAEoBRIvCgV2",
            "YWx1ZRgCIAEoCzIgLnN0Z19sZXZlbHNldF9wcm90by5FbGVtZW50U3RhdGU6",
            "AjgBIn0KCkNoYW5uZWxTZXQSPgoIY2hhbm5lbHMYASADKAsyLC5zdGdfbGV2",
            "ZWxzZXRfcHJvdG8uQ2hhbm5lbFNldC5DaGFubmVsc0VudHJ5Gi8KDUNoYW5u",
            "ZWxzRW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgIOgI4ASKIAwoE",
            "Q2VsbBIqCgd0ZXJyYWluGAEgASgLMhkuc3RnX2xldmVsc2V0X3Byb3RvLlRv",
            "a2VuEjMKEHRlcnJhaW5fbW9kaWZpZXIYAiABKAsyGS5zdGdfbGV2ZWxzZXRf",
            "cHJvdG8uVG9rZW4SKQoGcGlja3VwGAMgASgLMhkuc3RnX2xldmVsc2V0X3By",
            "b3RvLlRva2VuEiYKA21vYhgEIAEoCzIZLnN0Z19sZXZlbHNldF9wcm90by5U",
            "b2tlbhImCgN0b3AYBSABKAsyGS5zdGdfbGV2ZWxzZXRfcHJvdG8uVG9rZW4S",
            "KAoFbm9ydGgYBiABKAsyGS5zdGdfbGV2ZWxzZXRfcHJvdG8uVG9rZW4SJwoE",
            "ZWFzdBgHIAEoCzIZLnN0Z19sZXZlbHNldF9wcm90by5Ub2tlbhIoCgVzb3V0",
            "aBgIIAEoCzIZLnN0Z19sZXZlbHNldF9wcm90by5Ub2tlbhInCgR3ZXN0GAkg",
            "ASgLMhkuc3RnX2xldmVsc2V0X3Byb3RvLlRva2VuIj4KBVRva2VuEiYKAmlk",
            "GAEgASgOMhouc3RnX2xldmVsc2V0X3Byb3RvLkVsZW1JZBINCgVzdWJpZBgC",
            "IAEoBSLIAQoMRWxlbWVudFN0YXRlEgwKBHJ1bGUYASABKAUSDwoHY2hhbm5l",
            "bBgCIAEoBRIoCgVjb2xvchgDIAEoDjIZLnN0Z19sZXZlbHNldF9wcm90by5D",
            "b2xvchIqCgNkaXIYBCABKA4yHS5zdGdfbGV2ZWxzZXRfcHJvdG8uRGlyZWN0",
            "aW9uEg0KBWNvdW50GAUgASgFEjQKCWludmVudG9yeRgGIAMoCzIhLnN0Z19s",
            "ZXZlbHNldF9wcm90by5JbnZlbnRvcnlJdGVtImMKDUludmVudG9yeUl0ZW0S",
            "JgoCaWQYASABKA4yGi5zdGdfbGV2ZWxzZXRfcHJvdG8uRWxlbUlkEgwKBHJ1",
            "bGUYAiABKAUSDQoFY29sb3IYAyABKAUSDQoFY291bnQYBCABKAUieQoFSW5w",
            "dXQSLgoHcHJpbWFyeRgBIAEoDjIdLnN0Z19sZXZlbHNldF9wcm90by5EaXJl",
            "Y3Rpb24SMAoJc2Vjb25kYXJ5GAIgASgOMh0uc3RnX2xldmVsc2V0X3Byb3Rv",
            "LkRpcmVjdGlvbhIOCgZhY3Rpb24YAyABKAUq6QQKBkVsZW1JZBIUChBFTEVN",
            "SURfVU5ERUZJTkVEEAASCQoFU1BBQ0UQARIJCgVGTE9PUhACEggKBFdBTEwQ",
            "AxIICgRFWElUEAQSCQoFV0FURVIQBRIICgRGSVJFEAYSCAoERElSVBAHEgoK",
            "BkdSQVZFTBAIEgcKA0lDRRAJEgkKBUZPUkNFEAoSCgoGQ0xPTkVSEAsSCAoE",
            "SElOVBAMEg4KCkNIRUNLUE9JTlQQDRIJCgVUSElFRhAOEgwKCFRFTEVQT1JU",
            "EA8SCAoEVFJBUBAQEggKBERPT1IQERIPCgtUT0dHTEVfV0FMTBASEg4KClBP",
            "UFVQX1dBTEwQExIJCgVQQU5FTBBkEhAKDFRPR0dMRV9QQU5FTBBlEhEKDU9O",
            "RV9XQVlfUEFORUwQZhIPCgtQT1BVUF9QQU5FTBBnEgoKBkNPUk5FUhBoEgsK",
            "BlNPQ0tFVBDIARISCg1UT0dHTEVfQlVUVE9OEMkBEhMKDkhPTERPTkVfQlVU",
            "VE9OEMoBEhMKDkhPTERBTExfQlVUVE9OEMsBEhEKDE9ORU9GX0JVVFRPThDM",
            "ARIQCgtBUkVBX0JVVFRPThDNARIJCgRDSElQEKwCEgkKBEJPTUIQrQISDQoI",
            "RkxJUFBFUlMQrgISDAoHU1VDVElPThCvAhIOCglGSVJFQk9PVFMQsAISCwoG",
            "U0tBVEVTELECEggKA0tFWRCyAhILCgZQTEFZRVIQkAMSDwoKRElSVF9CTE9D",
            "SxCRAxIMCgdNT05TVEVSEJIDEgkKBFRBTksQkwMSEQoMTU9CX0ZPTExPV0VS",
            "EPMDEgsKBkNBTk9QWRD0AypBCglHYW1lc3RhdGUSFwoTR0FNRVNUQVRFX1VO",
            "REVGSU5FRBAAEggKBFBMQVkQARIICgRMT1NFEAISBwoDV0lOEAMqdAoFQ29s",
            "b3ISEwoPQ09MT1JfVU5ERUZJTkVEEAASBwoDUkVEEAESCAoEQkxVRRACEgkK",
            "BUdSRUVOEAMSCgoGWUVMTE9XEAQSCAoEQ1lBThAFEgsKB01BR0VOVEEQBhIK",
            "CgZPUkFOR0UQBxIJCgVCUk9XThAIKmwKCURpcmVjdGlvbhIXChNESVJFQ1RJ",
            "T05fVU5ERUZJTkVEEAASBQoBThABEgUKAUUQAhIFCgFTEAMSBQoBVxAEEgYK",
            "Ak5FEAUSBgoCU0UQBhIGCgJTVxAHEgYKAk5XEAgSCgoGUkFORE9NEAlCBqoC",
            "A1NUR2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::STG.ElemId), typeof(global::STG.Gamestate), typeof(global::STG.Color), typeof(global::STG.Direction), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::STG.Levelset), global::STG.Levelset.Parser, new[]{ "Title", "Levels", "Authors" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::STG.Level), global::STG.Level.Parser, new[]{ "Title", "Authors", "Gameboard" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::STG.Gameboard), global::STG.Gameboard.Parser, new[]{ "SizeX", "SizeY", "SizeZ", "Tick", "Gamestate", "Globals", "Map", "ElementStates" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::STG.ChannelSet), global::STG.ChannelSet.Parser, new[]{ "Channels" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::STG.Cell), global::STG.Cell.Parser, new[]{ "Terrain", "TerrainModifier", "Pickup", "Mob", "Top", "North", "East", "South", "West" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::STG.Token), global::STG.Token.Parser, new[]{ "Id", "Subid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::STG.ElementState), global::STG.ElementState.Parser, new[]{ "Rule", "Channel", "Color", "Dir", "Count", "Inventory" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::STG.InventoryItem), global::STG.InventoryItem.Parser, new[]{ "Id", "Rule", "Color", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::STG.Input), global::STG.Input.Parser, new[]{ "Primary", "Secondary", "Action" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ElemId {
    [pbr::OriginalName("ELEMID_UNDEFINED")] Undefined = 0,
    /// <summary>
    /// TERRAIN
    /// </summary>
    [pbr::OriginalName("SPACE")] Space = 1,
    /// <summary>
    /// + color * 10_000
    /// </summary>
    [pbr::OriginalName("FLOOR")] Floor = 2,
    /// <summary>
    /// + (color * 10_000) + rule (0 = NORMAL, 1 = APPEARING, 2 = INVISIBLE, 3 = BLUE REAL, 4 = BLUE FAKE)
    /// </summary>
    [pbr::OriginalName("WALL")] Wall = 3,
    /// <summary>
    /// + color * 10_000, add time limit to elementstate
    /// </summary>
    [pbr::OriginalName("EXIT")] Exit = 4,
    /// <summary>
    /// + color * 10_000 (for dirt/floor that appears when filled in)
    /// </summary>
    [pbr::OriginalName("WATER")] Water = 5,
    /// <summary>
    /// + color * 10_000 (for water that appears when filled in)
    /// </summary>
    [pbr::OriginalName("FIRE")] Fire = 6,
    /// <summary>
    /// + color * 10_000 (for floor that appears)
    /// </summary>
    [pbr::OriginalName("DIRT")] Dirt = 7,
    [pbr::OriginalName("GRAVEL")] Gravel = 8,
    [pbr::OriginalName("ICE")] Ice = 9,
    /// <summary>
    /// + color * 10_000 + direction (0 = RAND, 1 = N, 2 = E, 3 = S, 4 = W)
    /// </summary>
    [pbr::OriginalName("FORCE")] Force = 10,
    /// <summary>
    /// + color * 10_000
    /// </summary>
    [pbr::OriginalName("CLONER")] Cloner = 11,
    [pbr::OriginalName("HINT")] Hint = 12,
    [pbr::OriginalName("CHECKPOINT")] Checkpoint = 13,
    /// <summary>
    /// + rule
    /// </summary>
    [pbr::OriginalName("THIEF")] Thief = 14,
    /// <summary>
    /// + color * 10_000
    /// </summary>
    [pbr::OriginalName("TELEPORT")] Teleport = 15,
    /// <summary>
    /// + color * 10_000 + rule (0 = OPEN, 1 = SHUT)
    /// </summary>
    [pbr::OriginalName("TRAP")] Trap = 16,
    /// <summary>
    /// + color * 10_000
    /// </summary>
    [pbr::OriginalName("DOOR")] Door = 17,
    /// <summary>
    /// + color * 10_000 + rule (0 = OPEN, 1 = SHUT)
    /// </summary>
    [pbr::OriginalName("TOGGLE_WALL")] ToggleWall = 18,
    /// <summary>
    /// + color * 10_000 + count (1-99)
    /// </summary>
    [pbr::OriginalName("POPUP_WALL")] PopupWall = 19,
    /// <summary>
    /// NESW
    /// </summary>
    [pbr::OriginalName("PANEL")] Panel = 100,
    /// <summary>
    /// + color * 10_000 + rule (0 = OPEN, 1 = SHUT)
    /// </summary>
    [pbr::OriginalName("TOGGLE_PANEL")] TogglePanel = 101,
    /// <summary>
    /// + color * 10_000 + rule (0 = IN, 1 = OUT)
    /// </summary>
    [pbr::OriginalName("ONE_WAY_PANEL")] OneWayPanel = 102,
    /// <summary>
    /// + color * 10_000 + count
    /// </summary>
    [pbr::OriginalName("POPUP_PANEL")] PopupPanel = 103,
    /// <summary>
    /// Modifies exit direction. Use on ice for ice corners.
    /// Also useful on floors and force floors.
    /// </summary>
    [pbr::OriginalName("CORNER")] Corner = 104,
    /// <summary>
    /// TERRAIN_MODIFIER
    /// </summary>
    [pbr::OriginalName("SOCKET")] Socket = 200,
    /// <summary>
    /// TOGGLE: Toggle event for {color, channel} when pressed. (default for TW cloners, tanks, toggles).
    /// HOLDONE: (default for TW traps)
    ///      Toggle event when the first HOLDONE button of this {color, channel} is pressed.
    ///      Toggle event when the last HOLDONE button of this {color, channel} is released.
    /// HOLDALL
    ///      Toggle event when the last HOLDALL button of this {color, channel} is pressed.
    ///      Toggle event when the first HOLDALL buttonn of this {color, channel} is released.
    /// ONEOF
    ///      Set this {color, channel} to True.
    ///      For this {color}, set all other channels to False.
    /// AREA
    ///      Same as toggle but only acts on elements in a 5x5 square.
    /// </summary>
    [pbr::OriginalName("TOGGLE_BUTTON")] ToggleButton = 201,
    /// <summary>
    /// + color * 10_000 + channel
    /// </summary>
    [pbr::OriginalName("HOLDONE_BUTTON")] HoldoneButton = 202,
    /// <summary>
    /// + color * 10_000 + channel
    /// </summary>
    [pbr::OriginalName("HOLDALL_BUTTON")] HoldallButton = 203,
    /// <summary>
    /// + color * 10_000 + channel
    /// </summary>
    [pbr::OriginalName("ONEOF_BUTTON")] OneofButton = 204,
    /// <summary>
    /// + color * 10_000 + channel
    /// </summary>
    [pbr::OriginalName("AREA_BUTTON")] AreaButton = 205,
    /// <summary>
    /// PICKUP
    /// Rule: 
    /// --NORMAL: mobs can enter but cannot pickup
    /// --RAINBOW_FENCE: mobs can pickup and use
    /// --FENCE: mobs cannot enter
    /// </summary>
    [pbr::OriginalName("CHIP")] Chip = 300,
    [pbr::OriginalName("BOMB")] Bomb = 301,
    /// <summary>
    /// + rule * 1_000 + count
    /// </summary>
    [pbr::OriginalName("FLIPPERS")] Flippers = 302,
    /// <summary>
    /// + rule * 1_000 + count
    /// </summary>
    [pbr::OriginalName("SUCTION")] Suction = 303,
    /// <summary>
    /// + rule * 1_000 + count
    /// </summary>
    [pbr::OriginalName("FIREBOOTS")] Fireboots = 304,
    /// <summary>
    /// + rule * 1_000 + count
    /// </summary>
    [pbr::OriginalName("SKATES")] Skates = 305,
    /// <summary>
    /// + color * 10_000 + rule * 1_000 + count (999 = FOREVER KEY, do not decrement)
    /// </summary>
    [pbr::OriginalName("KEY")] Key = 306,
    /// <summary>
    /// MOB
    /// </summary>
    [pbr::OriginalName("PLAYER")] Player = 400,
    /// <summary>
    /// + mob_id
    /// </summary>
    [pbr::OriginalName("DIRT_BLOCK")] DirtBlock = 401,
    /// <summary>
    /// 1 ANT 2 PARA 3 GLIDER 4 FIREBALL 5 BALL 6 WALKER 7 BLOB 8 TEETH
    /// </summary>
    [pbr::OriginalName("MONSTER")] Monster = 402,
    /// <summary>
    /// + mob_id
    /// </summary>
    [pbr::OriginalName("TANK")] Tank = 403,
    /// <summary>
    /// Invisible token that blocks mob entry until next tick.
    /// Ensures well behaved monster patterns.
    /// </summary>
    [pbr::OriginalName("MOB_FOLLOWER")] MobFollower = 499,
    /// <summary>
    /// TOP
    /// </summary>
    [pbr::OriginalName("CANOPY")] Canopy = 500,
  }

  public enum Gamestate {
    [pbr::OriginalName("GAMESTATE_UNDEFINED")] Undefined = 0,
    [pbr::OriginalName("PLAY")] Play = 1,
    [pbr::OriginalName("LOSE")] Lose = 2,
    [pbr::OriginalName("WIN")] Win = 3,
  }

  public enum Color {
    [pbr::OriginalName("COLOR_UNDEFINED")] Undefined = 0,
    [pbr::OriginalName("RED")] Red = 1,
    [pbr::OriginalName("BLUE")] Blue = 2,
    [pbr::OriginalName("GREEN")] Green = 3,
    [pbr::OriginalName("YELLOW")] Yellow = 4,
    [pbr::OriginalName("CYAN")] Cyan = 5,
    [pbr::OriginalName("MAGENTA")] Magenta = 6,
    [pbr::OriginalName("ORANGE")] Orange = 7,
    [pbr::OriginalName("BROWN")] Brown = 8,
  }

  public enum Direction {
    [pbr::OriginalName("DIRECTION_UNDEFINED")] Undefined = 0,
    [pbr::OriginalName("N")] N = 1,
    [pbr::OriginalName("E")] E = 2,
    [pbr::OriginalName("S")] S = 3,
    [pbr::OriginalName("W")] W = 4,
    [pbr::OriginalName("NE")] Ne = 5,
    [pbr::OriginalName("SE")] Se = 6,
    [pbr::OriginalName("SW")] Sw = 7,
    [pbr::OriginalName("NW")] Nw = 8,
    [pbr::OriginalName("RANDOM")] Random = 9,
  }

  #endregion

  #region Messages
  public sealed partial class Levelset : pb::IMessage<Levelset>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Levelset> _parser = new pb::MessageParser<Levelset>(() => new Levelset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Levelset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::STG.StgLevelsetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Levelset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Levelset(Levelset other) : this() {
      title_ = other.title_;
      levels_ = other.levels_.Clone();
      authors_ = other.authors_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Levelset Clone() {
      return new Levelset(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "levels" field.</summary>
    public const int LevelsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::STG.Level> _repeated_levels_codec
        = pb::FieldCodec.ForMessage(18, global::STG.Level.Parser);
    private readonly pbc::RepeatedField<global::STG.Level> levels_ = new pbc::RepeatedField<global::STG.Level>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::STG.Level> Levels {
      get { return levels_; }
    }

    /// <summary>Field number for the "authors" field.</summary>
    public const int AuthorsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_authors_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> authors_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Authors {
      get { return authors_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Levelset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Levelset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if(!levels_.Equals(other.levels_)) return false;
      if(!authors_.Equals(other.authors_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      hash ^= levels_.GetHashCode();
      hash ^= authors_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Title.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      levels_.WriteTo(output, _repeated_levels_codec);
      authors_.WriteTo(output, _repeated_authors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Title.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      levels_.WriteTo(ref output, _repeated_levels_codec);
      authors_.WriteTo(ref output, _repeated_authors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      size += levels_.CalculateSize(_repeated_levels_codec);
      size += authors_.CalculateSize(_repeated_authors_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Levelset other) {
      if (other == null) {
        return;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      levels_.Add(other.levels_);
      authors_.Add(other.authors_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            levels_.AddEntriesFrom(input, _repeated_levels_codec);
            break;
          }
          case 26: {
            authors_.AddEntriesFrom(input, _repeated_authors_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            levels_.AddEntriesFrom(ref input, _repeated_levels_codec);
            break;
          }
          case 26: {
            authors_.AddEntriesFrom(ref input, _repeated_authors_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Optimized for editors and sharing. Setup Gameboard from Level.
  /// </summary>
  public sealed partial class Level : pb::IMessage<Level>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Level> _parser = new pb::MessageParser<Level>(() => new Level());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Level> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::STG.StgLevelsetReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Level() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Level(Level other) : this() {
      title_ = other.title_;
      authors_ = other.authors_.Clone();
      gameboard_ = other.gameboard_ != null ? other.gameboard_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Level Clone() {
      return new Level(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "authors" field.</summary>
    public const int AuthorsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_authors_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> authors_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Authors {
      get { return authors_; }
    }

    /// <summary>Field number for the "gameboard" field.</summary>
    public const int GameboardFieldNumber = 4;
    private global::STG.Gameboard gameboard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::STG.Gameboard Gameboard {
      get { return gameboard_; }
      set {
        gameboard_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Level);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Level other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if(!authors_.Equals(other.authors_)) return false;
      if (!object.Equals(Gameboard, other.Gameboard)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      hash ^= authors_.GetHashCode();
      if (gameboard_ != null) hash ^= Gameboard.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Title.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      authors_.WriteTo(output, _repeated_authors_codec);
      if (gameboard_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Gameboard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Title.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      authors_.WriteTo(ref output, _repeated_authors_codec);
      if (gameboard_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Gameboard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      size += authors_.CalculateSize(_repeated_authors_codec);
      if (gameboard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gameboard);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Level other) {
      if (other == null) {
        return;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      authors_.Add(other.authors_);
      if (other.gameboard_ != null) {
        if (gameboard_ == null) {
          Gameboard = new global::STG.Gameboard();
        }
        Gameboard.MergeFrom(other.Gameboard);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            authors_.AddEntriesFrom(input, _repeated_authors_codec);
            break;
          }
          case 34: {
            if (gameboard_ == null) {
              Gameboard = new global::STG.Gameboard();
            }
            input.ReadMessage(Gameboard);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            authors_.AddEntriesFrom(ref input, _repeated_authors_codec);
            break;
          }
          case 34: {
            if (gameboard_ == null) {
              Gameboard = new global::STG.Gameboard();
            }
            input.ReadMessage(Gameboard);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Optimized for in-memory gameplay. Setup from Level.
  /// </summary>
  public sealed partial class Gameboard : pb::IMessage<Gameboard>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Gameboard> _parser = new pb::MessageParser<Gameboard>(() => new Gameboard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Gameboard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::STG.StgLevelsetReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Gameboard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Gameboard(Gameboard other) : this() {
      sizeX_ = other.sizeX_;
      sizeY_ = other.sizeY_;
      sizeZ_ = other.sizeZ_;
      tick_ = other.tick_;
      gamestate_ = other.gamestate_;
      globals_ = other.globals_.Clone();
      map_ = other.map_.Clone();
      elementStates_ = other.elementStates_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Gameboard Clone() {
      return new Gameboard(this);
    }

    /// <summary>Field number for the "size_x" field.</summary>
    public const int SizeXFieldNumber = 1;
    private int sizeX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SizeX {
      get { return sizeX_; }
      set {
        sizeX_ = value;
      }
    }

    /// <summary>Field number for the "size_y" field.</summary>
    public const int SizeYFieldNumber = 2;
    private int sizeY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SizeY {
      get { return sizeY_; }
      set {
        sizeY_ = value;
      }
    }

    /// <summary>Field number for the "size_z" field.</summary>
    public const int SizeZFieldNumber = 3;
    private int sizeZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SizeZ {
      get { return sizeZ_; }
      set {
        sizeZ_ = value;
      }
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 4;
    private int tick_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Tick {
      get { return tick_; }
      set {
        tick_ = value;
      }
    }

    /// <summary>Field number for the "gamestate" field.</summary>
    public const int GamestateFieldNumber = 5;
    private global::STG.Gamestate gamestate_ = global::STG.Gamestate.Undefined;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::STG.Gamestate Gamestate {
      get { return gamestate_; }
      set {
        gamestate_ = value;
      }
    }

    /// <summary>Field number for the "globals" field.</summary>
    public const int GlobalsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::STG.ChannelSet> _repeated_globals_codec
        = pb::FieldCodec.ForMessage(50, global::STG.ChannelSet.Parser);
    private readonly pbc::RepeatedField<global::STG.ChannelSet> globals_ = new pbc::RepeatedField<global::STG.ChannelSet>();
    /// <summary>
    /// list index by color, map index by channel
    /// Global variables are stored in Colors and Channels. 
    /// Channels are nested under Colors. A toggle event 
    /// consists of a {Color, Channel} combo, either of which can be 0 (default).
    /// If color == 0, iterate through all colors and toggle the
    /// specified channel.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::STG.ChannelSet> Globals {
      get { return globals_; }
    }

    /// <summary>Field number for the "map" field.</summary>
    public const int MapFieldNumber = 8;
    private static readonly pbc::MapField<int, global::STG.Cell>.Codec _map_map_codec
        = new pbc::MapField<int, global::STG.Cell>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::STG.Cell.Parser), 66);
    private readonly pbc::MapField<int, global::STG.Cell> map_ = new pbc::MapField<int, global::STG.Cell>();
    /// <summary>
    /// p = z * (size_x + size_y) + y * size_x + x
    /// x = (p % size_z) % size_x
    /// y = (p % size_z) // size_x
    /// z = p // size_z
    /// position to cell containing tokens
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, global::STG.Cell> Map {
      get { return map_; }
    }

    /// <summary>Field number for the "element_states" field.</summary>
    public const int ElementStatesFieldNumber = 9;
    private static readonly pbc::MapField<int, global::STG.ElementState>.Codec _map_elementStates_codec
        = new pbc::MapField<int, global::STG.ElementState>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::STG.ElementState.Parser), 74);
    private readonly pbc::MapField<int, global::STG.ElementState> elementStates_ = new pbc::MapField<int, global::STG.ElementState>();
    /// <summary>
    /// key = id * 100_000 + subid. Each element can have up to 100_000 instances.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, global::STG.ElementState> ElementStates {
      get { return elementStates_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Gameboard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Gameboard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SizeX != other.SizeX) return false;
      if (SizeY != other.SizeY) return false;
      if (SizeZ != other.SizeZ) return false;
      if (Tick != other.Tick) return false;
      if (Gamestate != other.Gamestate) return false;
      if(!globals_.Equals(other.globals_)) return false;
      if (!Map.Equals(other.Map)) return false;
      if (!ElementStates.Equals(other.ElementStates)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SizeX != 0) hash ^= SizeX.GetHashCode();
      if (SizeY != 0) hash ^= SizeY.GetHashCode();
      if (SizeZ != 0) hash ^= SizeZ.GetHashCode();
      if (Tick != 0) hash ^= Tick.GetHashCode();
      if (Gamestate != global::STG.Gamestate.Undefined) hash ^= Gamestate.GetHashCode();
      hash ^= globals_.GetHashCode();
      hash ^= Map.GetHashCode();
      hash ^= ElementStates.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SizeX != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SizeX);
      }
      if (SizeY != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SizeY);
      }
      if (SizeZ != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SizeZ);
      }
      if (Tick != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Tick);
      }
      if (Gamestate != global::STG.Gamestate.Undefined) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Gamestate);
      }
      globals_.WriteTo(output, _repeated_globals_codec);
      map_.WriteTo(output, _map_map_codec);
      elementStates_.WriteTo(output, _map_elementStates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SizeX != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SizeX);
      }
      if (SizeY != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SizeY);
      }
      if (SizeZ != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SizeZ);
      }
      if (Tick != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Tick);
      }
      if (Gamestate != global::STG.Gamestate.Undefined) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Gamestate);
      }
      globals_.WriteTo(ref output, _repeated_globals_codec);
      map_.WriteTo(ref output, _map_map_codec);
      elementStates_.WriteTo(ref output, _map_elementStates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SizeX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SizeX);
      }
      if (SizeY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SizeY);
      }
      if (SizeZ != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SizeZ);
      }
      if (Tick != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tick);
      }
      if (Gamestate != global::STG.Gamestate.Undefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Gamestate);
      }
      size += globals_.CalculateSize(_repeated_globals_codec);
      size += map_.CalculateSize(_map_map_codec);
      size += elementStates_.CalculateSize(_map_elementStates_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Gameboard other) {
      if (other == null) {
        return;
      }
      if (other.SizeX != 0) {
        SizeX = other.SizeX;
      }
      if (other.SizeY != 0) {
        SizeY = other.SizeY;
      }
      if (other.SizeZ != 0) {
        SizeZ = other.SizeZ;
      }
      if (other.Tick != 0) {
        Tick = other.Tick;
      }
      if (other.Gamestate != global::STG.Gamestate.Undefined) {
        Gamestate = other.Gamestate;
      }
      globals_.Add(other.globals_);
      map_.Add(other.map_);
      elementStates_.Add(other.elementStates_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SizeX = input.ReadInt32();
            break;
          }
          case 16: {
            SizeY = input.ReadInt32();
            break;
          }
          case 24: {
            SizeZ = input.ReadInt32();
            break;
          }
          case 32: {
            Tick = input.ReadInt32();
            break;
          }
          case 40: {
            Gamestate = (global::STG.Gamestate) input.ReadEnum();
            break;
          }
          case 50: {
            globals_.AddEntriesFrom(input, _repeated_globals_codec);
            break;
          }
          case 66: {
            map_.AddEntriesFrom(input, _map_map_codec);
            break;
          }
          case 74: {
            elementStates_.AddEntriesFrom(input, _map_elementStates_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SizeX = input.ReadInt32();
            break;
          }
          case 16: {
            SizeY = input.ReadInt32();
            break;
          }
          case 24: {
            SizeZ = input.ReadInt32();
            break;
          }
          case 32: {
            Tick = input.ReadInt32();
            break;
          }
          case 40: {
            Gamestate = (global::STG.Gamestate) input.ReadEnum();
            break;
          }
          case 50: {
            globals_.AddEntriesFrom(ref input, _repeated_globals_codec);
            break;
          }
          case 66: {
            map_.AddEntriesFrom(ref input, _map_map_codec);
            break;
          }
          case 74: {
            elementStates_.AddEntriesFrom(ref input, _map_elementStates_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ChannelSet : pb::IMessage<ChannelSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChannelSet> _parser = new pb::MessageParser<ChannelSet>(() => new ChannelSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChannelSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::STG.StgLevelsetReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChannelSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChannelSet(ChannelSet other) : this() {
      channels_ = other.channels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChannelSet Clone() {
      return new ChannelSet(this);
    }

    /// <summary>Field number for the "channels" field.</summary>
    public const int ChannelsFieldNumber = 1;
    private static readonly pbc::MapField<int, bool>.Codec _map_channels_codec
        = new pbc::MapField<int, bool>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForBool(16, false), 10);
    private readonly pbc::MapField<int, bool> channels_ = new pbc::MapField<int, bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, bool> Channels {
      get { return channels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChannelSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChannelSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Channels.Equals(other.Channels)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Channels.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      channels_.WriteTo(output, _map_channels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      channels_.WriteTo(ref output, _map_channels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += channels_.CalculateSize(_map_channels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChannelSet other) {
      if (other == null) {
        return;
      }
      channels_.Add(other.channels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            channels_.AddEntriesFrom(input, _map_channels_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            channels_.AddEntriesFrom(ref input, _map_channels_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Cell : pb::IMessage<Cell>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Cell> _parser = new pb::MessageParser<Cell>(() => new Cell());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Cell> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::STG.StgLevelsetReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Cell() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Cell(Cell other) : this() {
      terrain_ = other.terrain_ != null ? other.terrain_.Clone() : null;
      terrainModifier_ = other.terrainModifier_ != null ? other.terrainModifier_.Clone() : null;
      pickup_ = other.pickup_ != null ? other.pickup_.Clone() : null;
      mob_ = other.mob_ != null ? other.mob_.Clone() : null;
      top_ = other.top_ != null ? other.top_.Clone() : null;
      north_ = other.north_ != null ? other.north_.Clone() : null;
      east_ = other.east_ != null ? other.east_.Clone() : null;
      south_ = other.south_ != null ? other.south_.Clone() : null;
      west_ = other.west_ != null ? other.west_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Cell Clone() {
      return new Cell(this);
    }

    /// <summary>Field number for the "terrain" field.</summary>
    public const int TerrainFieldNumber = 1;
    private global::STG.Token terrain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::STG.Token Terrain {
      get { return terrain_; }
      set {
        terrain_ = value;
      }
    }

    /// <summary>Field number for the "terrain_modifier" field.</summary>
    public const int TerrainModifierFieldNumber = 2;
    private global::STG.Token terrainModifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::STG.Token TerrainModifier {
      get { return terrainModifier_; }
      set {
        terrainModifier_ = value;
      }
    }

    /// <summary>Field number for the "pickup" field.</summary>
    public const int PickupFieldNumber = 3;
    private global::STG.Token pickup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::STG.Token Pickup {
      get { return pickup_; }
      set {
        pickup_ = value;
      }
    }

    /// <summary>Field number for the "mob" field.</summary>
    public const int MobFieldNumber = 4;
    private global::STG.Token mob_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::STG.Token Mob {
      get { return mob_; }
      set {
        mob_ = value;
      }
    }

    /// <summary>Field number for the "top" field.</summary>
    public const int TopFieldNumber = 5;
    private global::STG.Token top_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::STG.Token Top {
      get { return top_; }
      set {
        top_ = value;
      }
    }

    /// <summary>Field number for the "north" field.</summary>
    public const int NorthFieldNumber = 6;
    private global::STG.Token north_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::STG.Token North {
      get { return north_; }
      set {
        north_ = value;
      }
    }

    /// <summary>Field number for the "east" field.</summary>
    public const int EastFieldNumber = 7;
    private global::STG.Token east_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::STG.Token East {
      get { return east_; }
      set {
        east_ = value;
      }
    }

    /// <summary>Field number for the "south" field.</summary>
    public const int SouthFieldNumber = 8;
    private global::STG.Token south_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::STG.Token South {
      get { return south_; }
      set {
        south_ = value;
      }
    }

    /// <summary>Field number for the "west" field.</summary>
    public const int WestFieldNumber = 9;
    private global::STG.Token west_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::STG.Token West {
      get { return west_; }
      set {
        west_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Cell);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Cell other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Terrain, other.Terrain)) return false;
      if (!object.Equals(TerrainModifier, other.TerrainModifier)) return false;
      if (!object.Equals(Pickup, other.Pickup)) return false;
      if (!object.Equals(Mob, other.Mob)) return false;
      if (!object.Equals(Top, other.Top)) return false;
      if (!object.Equals(North, other.North)) return false;
      if (!object.Equals(East, other.East)) return false;
      if (!object.Equals(South, other.South)) return false;
      if (!object.Equals(West, other.West)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (terrain_ != null) hash ^= Terrain.GetHashCode();
      if (terrainModifier_ != null) hash ^= TerrainModifier.GetHashCode();
      if (pickup_ != null) hash ^= Pickup.GetHashCode();
      if (mob_ != null) hash ^= Mob.GetHashCode();
      if (top_ != null) hash ^= Top.GetHashCode();
      if (north_ != null) hash ^= North.GetHashCode();
      if (east_ != null) hash ^= East.GetHashCode();
      if (south_ != null) hash ^= South.GetHashCode();
      if (west_ != null) hash ^= West.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (terrain_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Terrain);
      }
      if (terrainModifier_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TerrainModifier);
      }
      if (pickup_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pickup);
      }
      if (mob_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Mob);
      }
      if (top_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Top);
      }
      if (north_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(North);
      }
      if (east_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(East);
      }
      if (south_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(South);
      }
      if (west_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(West);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (terrain_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Terrain);
      }
      if (terrainModifier_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TerrainModifier);
      }
      if (pickup_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pickup);
      }
      if (mob_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Mob);
      }
      if (top_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Top);
      }
      if (north_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(North);
      }
      if (east_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(East);
      }
      if (south_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(South);
      }
      if (west_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(West);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (terrain_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Terrain);
      }
      if (terrainModifier_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TerrainModifier);
      }
      if (pickup_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pickup);
      }
      if (mob_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mob);
      }
      if (top_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Top);
      }
      if (north_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(North);
      }
      if (east_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(East);
      }
      if (south_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(South);
      }
      if (west_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(West);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Cell other) {
      if (other == null) {
        return;
      }
      if (other.terrain_ != null) {
        if (terrain_ == null) {
          Terrain = new global::STG.Token();
        }
        Terrain.MergeFrom(other.Terrain);
      }
      if (other.terrainModifier_ != null) {
        if (terrainModifier_ == null) {
          TerrainModifier = new global::STG.Token();
        }
        TerrainModifier.MergeFrom(other.TerrainModifier);
      }
      if (other.pickup_ != null) {
        if (pickup_ == null) {
          Pickup = new global::STG.Token();
        }
        Pickup.MergeFrom(other.Pickup);
      }
      if (other.mob_ != null) {
        if (mob_ == null) {
          Mob = new global::STG.Token();
        }
        Mob.MergeFrom(other.Mob);
      }
      if (other.top_ != null) {
        if (top_ == null) {
          Top = new global::STG.Token();
        }
        Top.MergeFrom(other.Top);
      }
      if (other.north_ != null) {
        if (north_ == null) {
          North = new global::STG.Token();
        }
        North.MergeFrom(other.North);
      }
      if (other.east_ != null) {
        if (east_ == null) {
          East = new global::STG.Token();
        }
        East.MergeFrom(other.East);
      }
      if (other.south_ != null) {
        if (south_ == null) {
          South = new global::STG.Token();
        }
        South.MergeFrom(other.South);
      }
      if (other.west_ != null) {
        if (west_ == null) {
          West = new global::STG.Token();
        }
        West.MergeFrom(other.West);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (terrain_ == null) {
              Terrain = new global::STG.Token();
            }
            input.ReadMessage(Terrain);
            break;
          }
          case 18: {
            if (terrainModifier_ == null) {
              TerrainModifier = new global::STG.Token();
            }
            input.ReadMessage(TerrainModifier);
            break;
          }
          case 26: {
            if (pickup_ == null) {
              Pickup = new global::STG.Token();
            }
            input.ReadMessage(Pickup);
            break;
          }
          case 34: {
            if (mob_ == null) {
              Mob = new global::STG.Token();
            }
            input.ReadMessage(Mob);
            break;
          }
          case 42: {
            if (top_ == null) {
              Top = new global::STG.Token();
            }
            input.ReadMessage(Top);
            break;
          }
          case 50: {
            if (north_ == null) {
              North = new global::STG.Token();
            }
            input.ReadMessage(North);
            break;
          }
          case 58: {
            if (east_ == null) {
              East = new global::STG.Token();
            }
            input.ReadMessage(East);
            break;
          }
          case 66: {
            if (south_ == null) {
              South = new global::STG.Token();
            }
            input.ReadMessage(South);
            break;
          }
          case 74: {
            if (west_ == null) {
              West = new global::STG.Token();
            }
            input.ReadMessage(West);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (terrain_ == null) {
              Terrain = new global::STG.Token();
            }
            input.ReadMessage(Terrain);
            break;
          }
          case 18: {
            if (terrainModifier_ == null) {
              TerrainModifier = new global::STG.Token();
            }
            input.ReadMessage(TerrainModifier);
            break;
          }
          case 26: {
            if (pickup_ == null) {
              Pickup = new global::STG.Token();
            }
            input.ReadMessage(Pickup);
            break;
          }
          case 34: {
            if (mob_ == null) {
              Mob = new global::STG.Token();
            }
            input.ReadMessage(Mob);
            break;
          }
          case 42: {
            if (top_ == null) {
              Top = new global::STG.Token();
            }
            input.ReadMessage(Top);
            break;
          }
          case 50: {
            if (north_ == null) {
              North = new global::STG.Token();
            }
            input.ReadMessage(North);
            break;
          }
          case 58: {
            if (east_ == null) {
              East = new global::STG.Token();
            }
            input.ReadMessage(East);
            break;
          }
          case 66: {
            if (south_ == null) {
              South = new global::STG.Token();
            }
            input.ReadMessage(South);
            break;
          }
          case 74: {
            if (west_ == null) {
              West = new global::STG.Token();
            }
            input.ReadMessage(West);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Token : pb::IMessage<Token>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Token> _parser = new pb::MessageParser<Token>(() => new Token());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Token> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::STG.StgLevelsetReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Token() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Token(Token other) : this() {
      id_ = other.id_;
      subid_ = other.subid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Token Clone() {
      return new Token(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::STG.ElemId id_ = global::STG.ElemId.Undefined;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::STG.ElemId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "subid" field.</summary>
    public const int SubidFieldNumber = 2;
    private int subid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Subid {
      get { return subid_; }
      set {
        subid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Token);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Token other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Subid != other.Subid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != global::STG.ElemId.Undefined) hash ^= Id.GetHashCode();
      if (Subid != 0) hash ^= Subid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != global::STG.ElemId.Undefined) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Id);
      }
      if (Subid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Subid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != global::STG.ElemId.Undefined) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Id);
      }
      if (Subid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Subid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != global::STG.ElemId.Undefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Id);
      }
      if (Subid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Subid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Token other) {
      if (other == null) {
        return;
      }
      if (other.Id != global::STG.ElemId.Undefined) {
        Id = other.Id;
      }
      if (other.Subid != 0) {
        Subid = other.Subid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = (global::STG.ElemId) input.ReadEnum();
            break;
          }
          case 16: {
            Subid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = (global::STG.ElemId) input.ReadEnum();
            break;
          }
          case 16: {
            Subid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ElementState : pb::IMessage<ElementState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ElementState> _parser = new pb::MessageParser<ElementState>(() => new ElementState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ElementState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::STG.StgLevelsetReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ElementState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ElementState(ElementState other) : this() {
      rule_ = other.rule_;
      channel_ = other.channel_;
      color_ = other.color_;
      dir_ = other.dir_;
      count_ = other.count_;
      inventory_ = other.inventory_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ElementState Clone() {
      return new ElementState(this);
    }

    /// <summary>Field number for the "rule" field.</summary>
    public const int RuleFieldNumber = 1;
    private int rule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rule {
      get { return rule_; }
      set {
        rule_ = value;
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 2;
    private int channel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Channel {
      get { return channel_; }
      set {
        channel_ = value;
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 3;
    private global::STG.Color color_ = global::STG.Color.Undefined;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::STG.Color Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 4;
    private global::STG.Direction dir_ = global::STG.Direction.Undefined;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::STG.Direction Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 5;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "inventory" field.</summary>
    public const int InventoryFieldNumber = 6;
    private static readonly pb::FieldCodec<global::STG.InventoryItem> _repeated_inventory_codec
        = pb::FieldCodec.ForMessage(50, global::STG.InventoryItem.Parser);
    private readonly pbc::RepeatedField<global::STG.InventoryItem> inventory_ = new pbc::RepeatedField<global::STG.InventoryItem>();
    /// <summary>
    /// TODO: how to handle tags like FORCED/SLIDING.
    /// repeated ElemTag tags = 7;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::STG.InventoryItem> Inventory {
      get { return inventory_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ElementState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ElementState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rule != other.Rule) return false;
      if (Channel != other.Channel) return false;
      if (Color != other.Color) return false;
      if (Dir != other.Dir) return false;
      if (Count != other.Count) return false;
      if(!inventory_.Equals(other.inventory_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Rule != 0) hash ^= Rule.GetHashCode();
      if (Channel != 0) hash ^= Channel.GetHashCode();
      if (Color != global::STG.Color.Undefined) hash ^= Color.GetHashCode();
      if (Dir != global::STG.Direction.Undefined) hash ^= Dir.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      hash ^= inventory_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Rule != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Rule);
      }
      if (Channel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Channel);
      }
      if (Color != global::STG.Color.Undefined) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Color);
      }
      if (Dir != global::STG.Direction.Undefined) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Dir);
      }
      if (Count != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Count);
      }
      inventory_.WriteTo(output, _repeated_inventory_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Rule != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Rule);
      }
      if (Channel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Channel);
      }
      if (Color != global::STG.Color.Undefined) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Color);
      }
      if (Dir != global::STG.Direction.Undefined) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Dir);
      }
      if (Count != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Count);
      }
      inventory_.WriteTo(ref output, _repeated_inventory_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Rule != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rule);
      }
      if (Channel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Channel);
      }
      if (Color != global::STG.Color.Undefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Color);
      }
      if (Dir != global::STG.Direction.Undefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Dir);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      size += inventory_.CalculateSize(_repeated_inventory_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ElementState other) {
      if (other == null) {
        return;
      }
      if (other.Rule != 0) {
        Rule = other.Rule;
      }
      if (other.Channel != 0) {
        Channel = other.Channel;
      }
      if (other.Color != global::STG.Color.Undefined) {
        Color = other.Color;
      }
      if (other.Dir != global::STG.Direction.Undefined) {
        Dir = other.Dir;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      inventory_.Add(other.inventory_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Rule = input.ReadInt32();
            break;
          }
          case 16: {
            Channel = input.ReadInt32();
            break;
          }
          case 24: {
            Color = (global::STG.Color) input.ReadEnum();
            break;
          }
          case 32: {
            Dir = (global::STG.Direction) input.ReadEnum();
            break;
          }
          case 40: {
            Count = input.ReadInt32();
            break;
          }
          case 50: {
            inventory_.AddEntriesFrom(input, _repeated_inventory_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Rule = input.ReadInt32();
            break;
          }
          case 16: {
            Channel = input.ReadInt32();
            break;
          }
          case 24: {
            Color = (global::STG.Color) input.ReadEnum();
            break;
          }
          case 32: {
            Dir = (global::STG.Direction) input.ReadEnum();
            break;
          }
          case 40: {
            Count = input.ReadInt32();
            break;
          }
          case 50: {
            inventory_.AddEntriesFrom(ref input, _repeated_inventory_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InventoryItem : pb::IMessage<InventoryItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InventoryItem> _parser = new pb::MessageParser<InventoryItem>(() => new InventoryItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InventoryItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::STG.StgLevelsetReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InventoryItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InventoryItem(InventoryItem other) : this() {
      id_ = other.id_;
      rule_ = other.rule_;
      color_ = other.color_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InventoryItem Clone() {
      return new InventoryItem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::STG.ElemId id_ = global::STG.ElemId.Undefined;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::STG.ElemId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "rule" field.</summary>
    public const int RuleFieldNumber = 2;
    private int rule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rule {
      get { return rule_; }
      set {
        rule_ = value;
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 3;
    private int color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 4;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InventoryItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InventoryItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Rule != other.Rule) return false;
      if (Color != other.Color) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != global::STG.ElemId.Undefined) hash ^= Id.GetHashCode();
      if (Rule != 0) hash ^= Rule.GetHashCode();
      if (Color != 0) hash ^= Color.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != global::STG.ElemId.Undefined) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Id);
      }
      if (Rule != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Rule);
      }
      if (Color != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Color);
      }
      if (Count != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != global::STG.ElemId.Undefined) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Id);
      }
      if (Rule != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Rule);
      }
      if (Color != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Color);
      }
      if (Count != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != global::STG.ElemId.Undefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Id);
      }
      if (Rule != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rule);
      }
      if (Color != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Color);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InventoryItem other) {
      if (other == null) {
        return;
      }
      if (other.Id != global::STG.ElemId.Undefined) {
        Id = other.Id;
      }
      if (other.Rule != 0) {
        Rule = other.Rule;
      }
      if (other.Color != 0) {
        Color = other.Color;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = (global::STG.ElemId) input.ReadEnum();
            break;
          }
          case 16: {
            Rule = input.ReadInt32();
            break;
          }
          case 24: {
            Color = input.ReadInt32();
            break;
          }
          case 32: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = (global::STG.ElemId) input.ReadEnum();
            break;
          }
          case 16: {
            Rule = input.ReadInt32();
            break;
          }
          case 24: {
            Color = input.ReadInt32();
            break;
          }
          case 32: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Input : pb::IMessage<Input>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Input> _parser = new pb::MessageParser<Input>(() => new Input());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Input> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::STG.StgLevelsetReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Input() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Input(Input other) : this() {
      primary_ = other.primary_;
      secondary_ = other.secondary_;
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Input Clone() {
      return new Input(this);
    }

    /// <summary>Field number for the "primary" field.</summary>
    public const int PrimaryFieldNumber = 1;
    private global::STG.Direction primary_ = global::STG.Direction.Undefined;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::STG.Direction Primary {
      get { return primary_; }
      set {
        primary_ = value;
      }
    }

    /// <summary>Field number for the "secondary" field.</summary>
    public const int SecondaryFieldNumber = 2;
    private global::STG.Direction secondary_ = global::STG.Direction.Undefined;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::STG.Direction Secondary {
      get { return secondary_; }
      set {
        secondary_ = value;
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 3;
    private int action_;
    /// <summary>
    /// 0 indicates no action. Likely limit to 1, 2, or 3.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Input);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Input other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Primary != other.Primary) return false;
      if (Secondary != other.Secondary) return false;
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Primary != global::STG.Direction.Undefined) hash ^= Primary.GetHashCode();
      if (Secondary != global::STG.Direction.Undefined) hash ^= Secondary.GetHashCode();
      if (Action != 0) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Primary != global::STG.Direction.Undefined) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Primary);
      }
      if (Secondary != global::STG.Direction.Undefined) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Secondary);
      }
      if (Action != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Primary != global::STG.Direction.Undefined) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Primary);
      }
      if (Secondary != global::STG.Direction.Undefined) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Secondary);
      }
      if (Action != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Primary != global::STG.Direction.Undefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Primary);
      }
      if (Secondary != global::STG.Direction.Undefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Secondary);
      }
      if (Action != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Input other) {
      if (other == null) {
        return;
      }
      if (other.Primary != global::STG.Direction.Undefined) {
        Primary = other.Primary;
      }
      if (other.Secondary != global::STG.Direction.Undefined) {
        Secondary = other.Secondary;
      }
      if (other.Action != 0) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Primary = (global::STG.Direction) input.ReadEnum();
            break;
          }
          case 16: {
            Secondary = (global::STG.Direction) input.ReadEnum();
            break;
          }
          case 24: {
            Action = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Primary = (global::STG.Direction) input.ReadEnum();
            break;
          }
          case 16: {
            Secondary = (global::STG.Direction) input.ReadEnum();
            break;
          }
          case 24: {
            Action = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
